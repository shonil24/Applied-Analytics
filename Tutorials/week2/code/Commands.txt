library(ggplot2)
library(magrittr)
library(dplyr)
Cars <- read_csv("F:/MS/Sem 1/AA/week 2/Cars.csv")

View(Cars)

count(Cars)
# A tibble: 1 x 1
      n
  <int>
1   428

str(Cars)
summary(Cars)

# if you see any datatype of factor just use
# Example: Cars <- factor(c("l", "n", "n", "i", "l"), levels = c("n", "l", "i"), labels = c("none", "light", "intense"), ordered = TRUE) 

# Gender is factor has 4 levels (f, F, m, M)
# Example: dat$Gender[dat$Gender == 'M'] <- 'm'
# What this means change M values to small m value in Gender feature of dat dataset

# dat$Gender <- droplevels(dat$Gender)
# What it does is drop the level of M which is no longer needed
# plot(x = dat$Gender, y = dat$BloodPressure)

# In graph level 1 = f , level 2 = F , level 3 = m
# levels(dat$Gender)[2] <- 'f'
# Now adjusting it for f on big F i.e f values assign to F value
# plot(x = dat$Gender, y = dat$BloodPressure)

# Frequency density = Class freq / width of class

# Example: transform(Cars, Empid = c(5, 3, 3, 1))
# What it does is add a new column Empid to the cars database

############
Cylinders <- Cars$Cylinders
bins <- seq(-4, 16, by=2)
scores <- cut(Cylinders, bins)
table(scores)
scores
(-4,-2]  (-2,0]   (0,2]   (2,4]   (4,6]   (6,8]  (8,10] (10,12] (12,14] (14,16] 
      0       2       0     137     197      87       2       3       0       0 
transform(table(scores))
freqdist <- transform(table(scores))
freqdist
###########

2. hist(Cars$Cylinders)

2. table(Cars$Cylinders)

 -1   3   4   5   6   8  10  12 
  2   1 136   7 190  87   2   3 

136

3. table(Cars$Cylinders) %>% prop.table()*100 %>% round(2)
or
3. prop <- table(Cars$Cylinders) %>% prop.table()*100 
   prop %>% round(2)

   -1     3     4     5     6     8    10    12 
 0.47  0.23 31.78  1.64 44.39 20.33  0.47  0.70 

44.39

4. q4 <- Cars$All_wheel_drive %>% table() %>% prop.table()
   q4 %>% round(2)
   
   0.21

5. Cars$Sports %>% table()

   49

6. table(Cars$Cylinders, Cars$Sports) %>% prop.table(margin = 2) %>% round(2) 
   0.74

7. 0.65

8. yes

9. library(RColorBrewer)
   barplot(q9, main = "Comparison of sports and non-sports car", ylab="Proportion", xlab="Sports", ylim = c(0.0,0.6), legend=rownames(q9), args.legend=c(x = "top",horiz=TRUE,title="Different no of cylinders"), col=brewer.pal(8, name = "RdBu"), beside = TRUE)
   grid()

10. 6
11. 6

12. library(ggplot2)
    library(dplyr)
    samp <- Cars %>% sample_n(30)
    qplot(data = samp, geom = "dotplot", x = samp$Kilowatts, main = "Power of car engine in Kilowatts", xlab = "Kilowatts", binwidth = 8)
13. skewed to right
14. library(ggplot2)
    library(dplyr)
    Cars$Economy_city %>% hist(xlab="kilometres/litre", main="City Fuel Economy", ylim = c(0,200), breaks = 18, col = "skyblue3")

15. skewed to right
16. mean
17. library(ggplot2)
    library(dplyr)
    Cars$Length %>% hist(xlab="length", main="Car length", breaks = 18, ylim = c(0,70), xlim = c(300,600), col = "skyblue3")
    grid()
18. symmetric
19. Cars_filtered <- Cars %>% filter(Cylinders == 4 | Cylinders == 6)
    Cars_filtered %>%  boxplot(Economy_highway ~ Cylinders, data = ., main = "Highway fuel economy", ylab = "Fuel Economy", xlab = "No of Cylinders", col = "red")
20. 3
21. 4
22. 50

# cmean <- Cars_filtered$Economy_highway[Cars_filtered$Cylinders==4] 
# cmean[is.na(cmean)] <- 0

23. Cars_filtered3 <- Cars %>% filter(Cylinders== 4) 
    Cars_filtered3 %>% summary()
	(check the mean)

OR

Cars_4 <- Cars_filtered %>% filter(Cylinders == 4 & !is.na(Economy_highway))
Cars_4$Economy_highway %>% summary()
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  37.00   45.00   50.00   51.38   55.00   82.00 
Cars_4$Economy_highway %>% sd() %>% round(2)
[1] 8.11
Cars_4$Economy_highway %>% IQR()
[1] 10

51.38

24. Cars_4$Economy_highway %>% sd() %>% round(2)
[1] 8.11

25. Cars_4 <- Cars_filtered %>% filter(Cylinders == 6 & !is.na(Economy_highway))
    Cars_4$Economy_highway %>% IQR()
[1] 7

26. Cars_4 <- Cars_filtered %>% filter(Cylinders == 4 & !is.na(Economy_highway))
> Cars_4$Economy_highway %>% summary()
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  37.00   45.00   50.00   51.38   55.00   82.00 
> Cars_4$Economy_highway %>% sd() %>% round(2)
[1] 8.11
> Cars_4$Economy_highway %>% IQR()
[1] 10
> quantile(Cars_4$Economy_highway)
  0%  25%  50%  75% 100% 
  37   45   50   55   82 
> 55 + (1.5 * 10)
[1] 70

27. Cars_4 <- Cars_filtered %>% filter(Cylinders == 6 & !is.na(Economy_highway))
> Cars_4$Economy_highway %>% summary()
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  27.00   38.00   42.00   41.05   45.00   52.00 
> Cars_4$Economy_highway %>% sd() %>% round(2)
[1] 5.17
> Cars_4$Economy_highway %>% IQR()
[1] 7
> range(Cars_4$Economy_highway)
[1] 27 52
> 52 - 27
[1] 25

OR

Cars_4 <- Cars_filtered %>% filter(Cylinders == 6)
range(Cars_4$Economy_highway ,na.rm=TRUE)

28. Cars_clean <- Cars %>% filter(Economy_city < 70)
> plot(Economy_city ~ Economy_highway, data = Cars_clean, ylab="Highway Economy", xlab="City Economy", col="green", main="Scatter plot of City fuel economy by Highway fuel economy")

29. A 

30.  prop <- table(Cars$Cylinders) %>% prop.table()
    barplot(prop, main = "Distribution of different total car cylinders", xlab = "No of cylinders", ylab = "Proportion", ylim = c(0,0.5))
    grid()

# Assuming NP as outliers and for further processing changing NP to constant 0
calos$`Average length of stay (days)`[is.na(calos$`Average length of stay (days)`)] <- 0